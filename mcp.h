#ifndef __CHEBY__MOTORCONTROLPERIPHERAL__H__
#define __CHEBY__MOTORCONTROLPERIPHERAL__H__
#define MOTORCONTROLPERIPHERAL_SIZE 24

/* None */
#define MOTORCONTROLPERIPHERAL_POS_X 0x0UL
#define MOTORCONTROLPERIPHERAL_POS_X_POS_X_MASK 0xffffUL
#define MOTORCONTROLPERIPHERAL_POS_X_POS_X_SHIFT 0

/* None */
#define MOTORCONTROLPERIPHERAL_POS_Y 0x4UL
#define MOTORCONTROLPERIPHERAL_POS_Y_POS_Y_MASK 0xffffUL
#define MOTORCONTROLPERIPHERAL_POS_Y_POS_Y_SHIFT 0

/* None */
#define MOTORCONTROLPERIPHERAL_CONTROL 0x8UL
#define MOTORCONTROLPERIPHERAL_CONTROL_DRIVE_MODE_MASK 0x3UL
#define MOTORCONTROLPERIPHERAL_CONTROL_DRIVE_MODE_SHIFT 0
#define MOTORCONTROLPERIPHERAL_CONTROL_IGNORE_ES 0x4UL
#define MOTORCONTROLPERIPHERAL_CONTROL_TEST_LED 0x40UL

/* None */
#define MOTORCONTROLPERIPHERAL_POSITION 0xcUL
#define MOTORCONTROLPERIPHERAL_POSITION_POTENTIOMETER_MASK 0x3ffUL
#define MOTORCONTROLPERIPHERAL_POSITION_POTENTIOMETER_SHIFT 0
#define MOTORCONTROLPERIPHERAL_POSITION_END_SWITCH_1 0x10000UL
#define MOTORCONTROLPERIPHERAL_POSITION_END_SWITCH_2 0x20000UL

/* None */
#define MOTORCONTROLPERIPHERAL_ID 0x14UL
#define MOTORCONTROLPERIPHERAL_ID_ID_MASK 0xffUL
#define MOTORCONTROLPERIPHERAL_ID_ID_SHIFT 0

struct MotorControlPeripheral {
  /* [0x0]: REG (rw) (no description) */
  uint32_t pos_x;

  /* [0x4]: REG (rw) (no description) */
  uint32_t pos_y;

  /* [0x8]: REG (rw) (no description) */
  uint32_t control;

  /* [0xc]: REG (ro) (no description) */
  uint32_t position;

  /* padding to: 5 words */
  uint32_t __padding_0[1];

  /* [0x14]: REG (ro) (no description) */
  uint32_t id;
};

#endif /* __CHEBY__MOTORCONTROLPERIPHERAL__H__ */
